{"version":3,"sources":["components/navigation/NavLink.js","components/navigation/Navbar.js","components/navigation/NavButton.js","hooks/useDocumentTitle.js","hooks/useLoop.js","hooks/useResizeObserver.js","components/pages/Index.js","constants.js","components/shared/Light.js","components/shared/LightsWrapper.js","utils/relays/getLightIsOn.js","components/relays/RelaysLights.js","config/relays/60.js","components/pages/Relays.js","config/triacs/300.js","config/triacs/index.js","utils/triacs/getLightPowerPositions.js","utils/triacs/getPercentForPower.js","components/triacs/TriacsChart.js","components/triacs/TriacsLights.js","components/pages/Triacs.js","components/pages/NotFound.js","components/App.js","components/Root.js","index.js"],"names":["NavLink","_ref","to","children","react_default","a","createElement","es_NavLink","activeClassName","tag","ReactRouterNavLink","Navbar","_useState","useState","_useState2","Object","slicedToArray","isOpen","setIsOpen","es_Navbar","color","light","expand","NavbarBrand","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","navigation_NavLink","NavButton","rest","objectWithoutProperties","Button","assign","useDocumentTitle","title","useEffect","document","useLoop","tickMs","tickCount","reset","position","setPosition","loop","window","setInterval","clearInterval","ResizeObserver","Polyfill","useResizeObserver","arguments","length","undefined","ref","onResize","defaultRef","useRef","width","height","size","setSize","previous","current","Element","element","resizeObserver","entries","Array","isArray","entry","newWidth","Math","round","contentRect","newHeight","newSize","observe","unobserve","useMemo","objectSpread","IndexPage","Jumbotron","navigation_NavButton","RED","styled","div","_templateObject","_ref2","r","g","b","concat","Light","brightness","getR","getG","getB","getA","Light_Element","LightsWrapper","LightsWrapper_templateObject","getLightIsOn","lightConfig","loopPosition","loopEnd","lightStart","start","lightEnd","duration","getBrightness","isOn","RelaysLights","lights","red2","green2","blue","green1","red1","Row","Col","sm","shared_LightsWrapper","shared_Light","id","xs","_lights","defineProperty","RelaysPage","relays_RelaysLights","_300_lights","startFadeIn","startFadeOut","fadeFor","fadeDurationMs","LOW_POWER","FADE_POWERS","getLightPowerPositions","powerPositions","lightIsFadingOut","lightIsOn","fadeInPowerIdx","push","fadeOutPowerIdx","toConsumableArray","reverse","getPercentForPower","power","indexOf","generateChartData","chartData","_chartData$push","formatPercent","num","parseFloat","toFixed","XAxisTick","x","y","payload","transform","dy","textAnchor","fill","value","ChartWrapper","TriacsChart_templateObject","TriacsChart","_ref3","chartWrapperRef","chartWidth","commonLineProps","type","dot","es6","margin","top","right","left","bottom","data","strokeDasharray","dataKey","ticks","tick","TriacsChart_XAxisTick","tickFormatter","formatter","stroke","TriacsLights","red2PowerPositions","green2PowerPositions","green1PowerPositions","red1PowerPositions","_powerPositions","TriacsPage","triacs_TriacsLights","triacs_TriacsChart","NotFoundPage","Fragment","outline","App","navigation_Navbar","react_router","path","Index","Relays","Triacs","NotFound","Root","react_router_dom","components_App","ReactDOM","render","components_Root","getElementById"],"mappings":"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","file":"static/js/main.f3fc6476.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink as ReactstrapNavLink } from \"reactstrap\";\nimport { NavLink as ReactRouterNavLink } from \"react-router-dom\";\n\nconst NavLink = ({ to, children }) => (\n  <ReactstrapNavLink to={to} activeClassName=\"active\" tag={ReactRouterNavLink}>\n    {children}\n  </ReactstrapNavLink>\n);\n\nexport default NavLink;\n","import React, { useState } from \"react\";\nimport {\n  Collapse,\n  Navbar as ReactstrapNavbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem\n} from \"reactstrap\";\nimport NavLink from \"./NavLink\";\n\nconst Navbar = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleIsOpen = () => setIsOpen(!isOpen);\n\n  return (\n    <ReactstrapNavbar color=\"light\" light expand=\"md\">\n      <NavbarBrand>Peako Light Prototypes</NavbarBrand>\n      <NavbarToggler onClick={toggleIsOpen} />\n      <Collapse isOpen={isOpen} navbar>\n        <Nav navbar className=\"ml-auto\">\n          <NavItem>\n            <NavLink to=\"/relays\">Relays</NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink to=\"/triacs\">Triacs</NavLink>\n          </NavItem>\n        </Nav>\n      </Collapse>\n    </ReactstrapNavbar>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { Button } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\n\nconst NavButton = ({ children, ...rest }) => (\n  <Button {...rest} tag={NavLink}>\n    {children}\n  </Button>\n);\n\nexport default NavButton;\n","import { useEffect } from \"react\";\n\nconst useDocumentTitle = title => {\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n};\n\nexport default useDocumentTitle;\n","import { useState, useEffect } from \"react\";\n\nconst useLoop = ({ tickMs, tickCount }) => {\n  const start = 0;\n  const reset = tickCount - 1;\n  const [position, setPosition] = useState(start);\n\n  useEffect(() => {\n    const loop = window.setInterval(() => {\n      if (position < reset) {\n        setPosition(position + 1);\n      } else if (position === reset) {\n        setPosition(start);\n      }\n    }, tickMs);\n\n    return () => {\n      window.clearInterval(loop);\n    };\n  });\n\n  return { position };\n};\n\nexport default useLoop;\n","import { useEffect, useState, useRef, useMemo } from \"react\";\nimport { ResizeObserver as Polyfill } from \"@juggle/resize-observer\";\n\nconst ResizeObserver = window.ResizeObserver || Polyfill;\n\n// https://github.com/ZeeCoder/use-resize-observer/blob/master/src/index.js\nconst useResizeObserver = ({ ref, onResize } = {}) => {\n  const defaultRef = useRef(null);\n  ref = ref || defaultRef;\n  const [size, setSize] = useState({\n    width: undefined,\n    height: undefined\n  });\n\n  const previous = useRef({\n    width: undefined,\n    height: undefined\n  });\n\n  useEffect(() => {\n    if (\n      typeof ref !== \"object\" ||\n      ref === null ||\n      !(ref.current instanceof Element)\n    ) {\n      return;\n    }\n\n    const element = ref.current;\n    const resizeObserver = new ResizeObserver(entries => {\n      if (!Array.isArray(entries)) {\n        return;\n      }\n\n      if (!entries.length) {\n        return;\n      }\n\n      const entry = entries[0];\n\n      const newWidth = Math.round(entry.contentRect.width);\n      const newHeight = Math.round(entry.contentRect.height);\n      if (\n        previous.current.width !== newWidth ||\n        previous.current.height !== newHeight\n      ) {\n        const newSize = { width: newWidth, height: newHeight };\n        if (onResize) {\n          onResize(newSize);\n        } else {\n          previous.current.width = newWidth;\n          previous.current.height = newHeight;\n          setSize(newSize);\n        }\n      }\n    });\n\n    resizeObserver.observe(element);\n\n    return () => resizeObserver.unobserve(element);\n  }, [ref, onResize]);\n\n  return useMemo(() => ({ ref, ...size }), [\n    ref,\n    size ? size.width : null,\n    size ? size.height : null\n  ]);\n};\n\nexport default useResizeObserver;\n","import React from \"react\";\nimport { Jumbotron } from \"reactstrap\";\nimport NavButton from \"../navigation/NavButton\";\nimport { useDocumentTitle } from \"../../hooks\";\n\nconst IndexPage = () => {\n  useDocumentTitle(\"Peako Light Prototypes\");\n\n  return (\n    <Jumbotron>\n      <h1>Select Prototype</h1>\n      <NavButton to=\"/relays\" className=\"mr-2\">\n        Relays\n      </NavButton>\n      <NavButton to=\"/triacs\">Triacs</NavButton>\n    </Jumbotron>\n  );\n};\n\nexport default IndexPage;\n","/*\n  lights (left to right looking at them)\n*/\nexport const LIGHT_RED_2 = \"red2\";\n\nexport const LIGHT_GREEN_2 = \"green2\";\n\nexport const LIGHT_BLUE = \"blue\";\n\nexport const LIGHT_GREEN_1 = \"green1\";\n\nexport const LIGHT_RED_1 = \"red1\";\n\n/*\n  colors\n*/\nexport const RED = \"red\";\n\nexport const GREEN = \"green\";\n\nexport const BLUE = \"blue\";\n\n/*\n  brightness\n*/\nexport const MIN_LIGHT_BRIGHTNESS = 0.05;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { RED, GREEN, BLUE, MIN_LIGHT_BRIGHTNESS } from \"../../constants\";\n\n/*\n  utils\n*/\nconst getR = color => {\n  switch (color) {\n    case RED:\n      return 255;\n    default:\n      return 0;\n  }\n};\nconst getG = color => {\n  switch (color) {\n    case GREEN:\n      return 255;\n    default:\n      return 0;\n  }\n};\nconst getB = color => {\n  switch (color) {\n    case BLUE:\n      return 255;\n    default:\n      return 0;\n  }\n};\n\nconst getA = brightness =>\n  brightness === 0 ? MIN_LIGHT_BRIGHTNESS : brightness;\n\n/*\n  component\n*/\nconst Light = ({ title, color, brightness }) => {\n  const r = getR(color);\n  const g = getG(color);\n  const b = getB(color);\n  const a = getA(brightness);\n\n  return <Element title={title} r={r} g={g} b={b} a={a} />;\n};\n\n/*\n  styled\n*/\nconst Element = styled.div`\n  background-color: ${({ r, g, b, a }) => `rgba(${r}, ${g}, ${b}, ${a})`};\n  border: 1px solid black;\n  border-radius: 50%;\n  display: inline-block;\n  height: 50px;\n  width: 50px;\n`;\n\nexport default Light;\n","import styled from \"styled-components\";\n\nconst LightsWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport default LightsWrapper;\n","const getLightIsOn = (lightConfig, loopPosition, loopEnd) => {\n  const { start: lightStart, duration: lightDuration } = lightConfig;\n  const lightEnd = lightStart + lightDuration;\n  const lightStaysOnThroughLoopEnd = lightEnd > loopEnd;\n\n  if (\n    lightStaysOnThroughLoopEnd &&\n    ((loopPosition >= 0 && loopPosition < lightEnd - loopEnd) ||\n      loopPosition >= lightStart)\n  ) {\n    return true;\n  } else if (lightStart <= loopPosition && lightEnd > loopPosition) {\n    return true;\n  }\n\n  return false;\n};\n\nexport default getLightIsOn;\n","import React from \"react\";\nimport { Row, Col } from \"reactstrap\";\nimport { LightsWrapper, Light } from \"../shared\";\nimport { useLoop } from \"../../hooks\";\nimport { getLightIsOn } from \"../../utils/relays\";\n\n/*\n  utils\n*/\nconst getBrightness = isOn => (isOn ? 1 : 0);\n\n/*\n  component\n*/\nconst RelaysLights = ({ tickMs, tickCount, lights }) => {\n  const { position } = useLoop({ tickMs, tickCount });\n  const { red2, green2, blue, green1, red1 } = lights;\n\n  return (\n    <Row>\n      <Col sm={2} />\n      <Col sm={8}>\n        <LightsWrapper>\n          <Light\n            title={red2.id}\n            color={red2.color}\n            brightness={getBrightness(getLightIsOn(red2, position, tickCount))}\n          />\n          <Light\n            title={green2.id}\n            color={green2.color}\n            brightness={getBrightness(\n              getLightIsOn(green2, position, tickCount)\n            )}\n          />\n          <Light\n            title={blue.id}\n            color={blue.color}\n            brightness={getBrightness(getLightIsOn(blue, position, tickCount))}\n          />\n          <Light\n            title={green1.id}\n            color={green1.color}\n            brightness={getBrightness(\n              getLightIsOn(green1, position, tickCount)\n            )}\n          />\n          <Light\n            title={red1.id}\n            color={red1.color}\n            brightness={getBrightness(getLightIsOn(red1, position, tickCount))}\n          />\n        </LightsWrapper>\n      </Col>\n      <Col sm={2} />\n      <Col xs={12}>\n        <hr />\n      </Col>\n      <Col xs={12}>\n        <p className=\"small text-muted\">Loop Position: {position}</p>\n      </Col>\n    </Row>\n  );\n};\n\nexport default RelaysLights;\n","import {\n  LIGHT_RED_2,\n  LIGHT_GREEN_2,\n  LIGHT_BLUE,\n  LIGHT_GREEN_1,\n  LIGHT_RED_1,\n  RED,\n  GREEN,\n  BLUE\n} from \"../../constants\";\n\nexport const tickMs = 1000;\n\nexport const tickCount = 60;\n\nexport const lights = {\n  [LIGHT_RED_2]: {\n    id: LIGHT_RED_2,\n    color: RED,\n    start: 32,\n    duration: 8 // 39 - 32 + 1\n  },\n  [LIGHT_GREEN_2]: {\n    id: LIGHT_GREEN_2,\n    color: GREEN,\n    start: 20,\n    duration: 17 // 36 - 20 + 1\n  },\n  [LIGHT_BLUE]: {\n    id: LIGHT_BLUE,\n    color: BLUE,\n    start: 0,\n    duration: 60\n  },\n  [LIGHT_GREEN_1]: {\n    id: [LIGHT_GREEN_1],\n    color: GREEN,\n    start: 5,\n    duration: 17 // 21 - 5 + 1\n  },\n  [LIGHT_RED_1]: {\n    id: LIGHT_RED_1,\n    color: RED,\n    start: 0,\n    duration: 8 // 7 - 0 + 1\n  }\n};\n","import React from \"react\";\nimport { Row, Col } from \"reactstrap\";\nimport { RelaysLights } from \"../relays\";\nimport { useDocumentTitle } from \"../../hooks\";\nimport { tickMs, tickCount, lights } from \"../../config/relays\";\n\nconst RelaysPage = () => {\n  useDocumentTitle(\"Relays | Peako Light Prototype\");\n\n  return (\n    <Row>\n      <Col xs={12}>\n        <h1>Relays</h1>\n        <hr />\n      </Col>\n      <Col xs={12}>\n        <RelaysLights tickMs={tickMs} tickCount={tickCount} lights={lights} />\n      </Col>\n    </Row>\n  );\n};\n\nexport default RelaysPage;\n","import {\n  LIGHT_RED_2,\n  LIGHT_GREEN_2,\n  LIGHT_BLUE,\n  LIGHT_GREEN_1,\n  LIGHT_RED_1,\n  RED,\n  GREEN,\n  BLUE\n} from \"../../constants\";\n\nconst fadeDurationMs = 2000;\n\nexport const tickMs = 200; // 2000 ms fade / 10 fade power positions\n\nexport const tickCount = 300; // 60000 ms / 200 ms tick\n\nconst ticksPerSec = 1000 / tickMs;\n\nconst fadeFor = fadeDurationMs / tickMs;\n\nexport const lights = {\n  // Red 2 comes on at 32 increases to full at 34, stays full 34-41, and fades off from 41-43;\n  [LIGHT_RED_2]: {\n    id: LIGHT_RED_2,\n    color: RED,\n    startFadeIn: 32 * ticksPerSec,\n    startFadeOut: 41 * ticksPerSec,\n    fadeFor\n  },\n  // Green 2 comes on at 20, increases to full at 22, stays full 22-36, and fades off from 36-38;\n  [LIGHT_GREEN_2]: {\n    id: LIGHT_GREEN_2,\n    color: GREEN,\n    startFadeIn: 20 * ticksPerSec,\n    startFadeOut: 36 * ticksPerSec,\n    fadeFor\n  },\n  // Blue is on continually.\n  [LIGHT_BLUE]: {\n    id: LIGHT_BLUE,\n    color: BLUE\n  },\n  // Green 1 comes on at 5, increases to full at 7, stays full 7-21, and fades off from 21-23;\n  [LIGHT_GREEN_1]: {\n    id: [LIGHT_GREEN_1],\n    color: GREEN,\n    startFadeIn: 5 * ticksPerSec,\n    startFadeOut: 21 * ticksPerSec,\n    fadeFor\n  },\n  // Red 1 comes on at 0, increases to full at 2, stays full 2-9, and fades off from 9-11;\n  [LIGHT_RED_1]: {\n    id: LIGHT_RED_1,\n    color: RED,\n    startFadeIn: 0 * ticksPerSec,\n    startFadeOut: 9 * ticksPerSec,\n    fadeFor\n  }\n};\n","// power positions determined with `rbddimmer_serial_monitor_dim.ino`\nexport const LOW_POWER = 20;\n\nexport const HIGH_POWER = 37;\n\nexport const FADE_POWERS = [26, 28, 29, 30, 31, 32, 33, 34, 35, 36];\n\n// 300 tick loop @ 200 ms per tick (fade)\nexport * from \"./300\";\n","import { LOW_POWER, HIGH_POWER, FADE_POWERS } from \"../../config/triacs\";\n\nconst getLightPowerPositions = (lightConfig, tickCount) => {\n  const { startFadeIn, startFadeOut, fadeFor } = lightConfig;\n  const powerPositions = [];\n  let position = 0;\n\n  while (position < tickCount) {\n    const lightIsFadingIn =\n      position > startFadeIn && position <= startFadeIn + fadeFor;\n    const lightIsFadingOut =\n      position >= startFadeOut && position < startFadeOut + fadeFor;\n    const lightIsOn =\n      position > startFadeIn + fadeFor && position <= startFadeOut;\n\n    if (lightIsFadingIn) {\n      const fadeInPowerIdx = position - startFadeIn - 1;\n      powerPositions.push(FADE_POWERS[fadeInPowerIdx]);\n    } else if (lightIsFadingOut) {\n      const fadeOutPowerIdx = position - startFadeOut;\n      powerPositions.push([...FADE_POWERS].reverse()[fadeOutPowerIdx]);\n    } else if (lightIsOn) {\n      powerPositions.push(HIGH_POWER);\n    } else {\n      powerPositions.push(LOW_POWER);\n    }\n\n    position++;\n  }\n\n  return powerPositions;\n};\n\nexport default getLightPowerPositions;\n","import { LOW_POWER, HIGH_POWER, FADE_POWERS } from \"../../config/triacs\";\n\nconst getPercentForPower = power => {\n  const powerPositions = [LOW_POWER, ...FADE_POWERS, HIGH_POWER];\n  const numerator = powerPositions.indexOf(power);\n  const denominator = powerPositions.length - 1;\n  return numerator / denominator;\n};\n\nexport default getPercentForPower;\n","import React, { useRef } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip\n} from \"recharts\";\nimport styled from \"styled-components\";\nimport { useResizeObserver } from \"../../hooks\";\nimport { getPercentForPower } from \"../../utils/triacs\";\nimport {\n  LIGHT_RED_2,\n  LIGHT_GREEN_2,\n  LIGHT_GREEN_1,\n  LIGHT_RED_1,\n  RED,\n  GREEN\n} from \"../../constants\";\n\n/*\n  utils\n*/\nconst generateChartData = ({ tickCount, powerPositions }) => {\n  const chartData = [];\n  let position = 0;\n\n  while (position < tickCount) {\n    chartData.push({\n      position,\n      [LIGHT_RED_2]: getPercentForPower(powerPositions.red2[position]),\n      [LIGHT_GREEN_2]: getPercentForPower(powerPositions.green2[position]),\n      [LIGHT_GREEN_1]: getPercentForPower(powerPositions.green1[position]),\n      [LIGHT_RED_1]: getPercentForPower(powerPositions.red1[position])\n    });\n    position++;\n  }\n  return chartData;\n};\n\nconst formatPercent = num => `${parseFloat(num * 100).toFixed(1)}%`;\n\n/*\n  component\n*/\n// https://github.com/recharts/recharts/issues/1664#issuecomment-570227310\nconst XAxisTick = ({ x, y, payload }) => (\n  <g transform={`translate(${x},${y})`}>\n    <text dy={16} textAnchor=\"middle\" fill=\"#666\">\n      {payload.value}\n    </text>\n  </g>\n);\n\n// http://recharts.org/en-US/examples/SimpleLineChart\nconst TriacsChart = ({ tickCount, powerPositions }) => {\n  const chartWrapperRef = useRef(null);\n  const { width: chartWidth } = useResizeObserver({ ref: chartWrapperRef });\n  const commonLineProps = { type: \"monotone\", dot: false };\n\n  return (\n    <ChartWrapper ref={chartWrapperRef}>\n      <LineChart\n        width={chartWidth}\n        height={300}\n        margin={{\n          top: 20,\n          right: 20,\n          left: 0,\n          bottom: 40\n        }}\n        data={generateChartData({ tickCount, powerPositions })}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          dataKey=\"position\"\n          ticks={[\n            // 10 second intervals\n            0,\n            5 * 10 - 1,\n            5 * 20 - 1,\n            5 * 30 - 1,\n            5 * 40 - 1,\n            5 * 50 - 1,\n            5 * 60 - 1\n          ]}\n          tick={<XAxisTick />}\n        />\n        <YAxis tickCount={6} tickFormatter={formatPercent} />\n        <Tooltip formatter={formatPercent} />\n        <Line dataKey={LIGHT_RED_2} stroke={RED} {...commonLineProps} />\n        <Line dataKey={LIGHT_GREEN_2} stroke={GREEN} {...commonLineProps} />\n        <Line dataKey={LIGHT_GREEN_1} stroke={GREEN} {...commonLineProps} />\n        <Line dataKey={LIGHT_RED_1} stroke={RED} {...commonLineProps} />\n      </LineChart>\n    </ChartWrapper>\n  );\n};\n\n/*\n styled\n*/\nconst ChartWrapper = styled.div`\n  height: 200px;\n`;\n\nexport default TriacsChart;\n","import React from \"react\";\nimport { Row, Col } from \"reactstrap\";\nimport { LightsWrapper, Light } from \"../shared\";\nimport { useLoop } from \"../../hooks\";\nimport { getPercentForPower } from \"../../utils/triacs\";\n\nconst TriacsLights = ({ tickMs, tickCount, lights, powerPositions }) => {\n  const { position } = useLoop({ tickMs, tickCount });\n  const { red2, green2, blue, green1, red1 } = lights;\n\n  return (\n    <Row>\n      <Col sm={2} />\n      <Col sm={8}>\n        <LightsWrapper>\n          <Light\n            title={red2.id}\n            color={red2.color}\n            brightness={getPercentForPower(powerPositions.red2[position])}\n          />\n          <Light\n            title={green2.id}\n            color={green2.color}\n            brightness={getPercentForPower(powerPositions.green2[position])}\n          />\n          <Light title={blue.id} color={blue.color} brightness={1} />\n          <Light\n            title={green1.id}\n            color={green1.color}\n            brightness={getPercentForPower(powerPositions.green1[position])}\n          />\n          <Light\n            title={red1.id}\n            color={red1.color}\n            brightness={getPercentForPower(powerPositions.red1[position])}\n          />\n        </LightsWrapper>\n      </Col>\n      <Col sm={2} />\n      <Col xs={12}>\n        <hr />\n      </Col>\n      <Col xs={12}>\n        <p className=\"small text-muted\">Loop Position: {position}</p>\n      </Col>\n    </Row>\n  );\n};\n\nexport default TriacsLights;\n","import React from \"react\";\nimport { Row, Col } from \"reactstrap\";\nimport { TriacsLights, TriacsChart } from \"../triacs\";\nimport { useDocumentTitle } from \"../../hooks\";\nimport { getLightPowerPositions } from \"../../utils/triacs\";\nimport { tickMs, tickCount, lights } from \"../../config/triacs\";\nimport {\n  LIGHT_RED_2,\n  LIGHT_GREEN_2,\n  LIGHT_GREEN_1,\n  LIGHT_RED_1\n} from \"../../constants\";\n\nconst { red2, green2, green1, red1 } = lights;\nconst red2PowerPositions = getLightPowerPositions(red2, tickCount);\nconst green2PowerPositions = getLightPowerPositions(green2, tickCount);\nconst green1PowerPositions = getLightPowerPositions(green1, tickCount);\nconst red1PowerPositions = getLightPowerPositions(red1, tickCount);\nconst powerPositions = {\n  [LIGHT_RED_2]: red2PowerPositions,\n  [LIGHT_GREEN_2]: green2PowerPositions,\n  [LIGHT_GREEN_1]: green1PowerPositions,\n  [LIGHT_RED_1]: red1PowerPositions\n};\n\nconst TriacsPage = () => {\n  useDocumentTitle(\"Triacs | Peako Light Prototype\");\n\n  return (\n    <Row>\n      <Col xs={12}>\n        <h1>Triacs</h1>\n        <hr />\n      </Col>\n      <Col xs={12}>\n        <TriacsLights\n          tickMs={tickMs}\n          tickCount={tickCount}\n          lights={lights}\n          powerPositions={powerPositions}\n        />\n      </Col>\n      <Col xs={12}>\n        <TriacsChart tickCount={tickCount} powerPositions={powerPositions} />\n      </Col>\n    </Row>\n  );\n};\n\nexport default TriacsPage;\n","import React from \"react\";\nimport NavButton from \"../navigation/NavButton\";\nimport { useDocumentTitle } from \"../../hooks\";\n\nconst NotFoundPage = () => {\n  useDocumentTitle(\"Page Not Found | Peako Light Prototype\");\n\n  return (\n    <>\n      <h1 className=\"text-danger\">Page Not Found</h1>\n      <NavButton to=\"/\" outline>\n        Go Home\n      </NavButton>\n    </>\n  );\n};\n\nexport default NotFoundPage;\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Navbar from \"./navigation/Navbar\";\nimport Index from \"./pages/Index\";\nimport Relays from \"./pages/Relays\";\nimport Triacs from \"./pages/Triacs\";\nimport NotFound from \"./pages/NotFound\";\n\nconst App = () => (\n  <>\n    <Navbar />\n    <main className=\"container text-center\">\n      <Routes>\n        <Route path=\"/\" element={<Index />} />\n        <Route path=\"relays\" element={<Relays />} />\n        <Route path=\"triacs\" element={<Triacs />} />\n        <Route path=\"*\" element={<NotFound />} />\n      </Routes>\n    </main>\n  </>\n);\n\nexport default App;\n","import React from \"react\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\n\nconst Root = () => (\n  <Router>\n    <App />\n  </Router>\n);\n\nexport default Root;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Root from \"./components/Root\";\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n"],"sourceRoot":""}